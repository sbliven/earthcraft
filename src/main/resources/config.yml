worlds:
  # Add a section for each world using Earthcraft as a generator
  # For properties which expect a single value, only the last value given is used.
  "world":
    # Latitude/Longitude projection
    # Currently only EquirectangularProjection is supported
    mapProjection:
      # Equirectangular Projection
      # Maps lat/lon linearly to x/z. Causes severe distortion at most
      # latitudes.
      EquirectangularProjection:
        # location of the block (0,0)
        # lat/lon are in degrees
        origin: [0,0]
        # Scale of the world
        # lat/lon are in degrees/block
        scale: [0.01, 0.01]
    # Elevation scale
    # Currently only LinearElevationProjection is supported
    elevationProjection:
      # Linear elevation scale
      LinearElevationProjection:
        scale: 100 # meters/block
        #elev: -40.0 # meters; Elevation of the bottom of bedrock
        seaLevel: 64 # blocks; height of first dry block
    # location of the spawn point, in degrees
    spawn: [ 32.6615, -117.2475 ] #Pt. Loma, San Diego, CA
    # data sources
    sources:
      # source for elevation data
      elevation:
        ## A cache to wrap another provider and reduce overhead
        ## Recommended for online sources to reduce server load
        ## Uses nearest neighbor interpolation
        #InterpolatingElevationCache:
        #  # Primary elevation source
        #  provider:
        #    # Get elevation data from MapQuest's Open Elevation API
        #    OpenElevationConnector: {}
        #  # Spacing of the cache grid
        #  gridunit: degrees #or blocks
        #  grid: [ .004, .004 ]
        #  #Optionally, also specify grid origin (not needed) as origin.lat/lon
        #  origin: [ 0, 0 ]

        ## A fully offline provider, for testing projections
        ## Creates elevations within a rectangle increasing to the northeast.
        ## The south of the box has uniform low elevation, and areas outside the box
        ## have random elevation.
        #TestElevationProvider:
        #  # coordinates of the well-defined box
        #  south: 32.73
        #  north: 32.80 #84 blocks
        #  west: -117.26
        #  east: -117.20 # 72 blocks
        #  # elevation scale
        #  min: 0
        #  max: 64

        # Fetch SMRT elevation data
        InterpolatedCoverageElevationProvider:
          provider:
            SRTMPlusElevationProvider:
              cache: /Users/blivens/dev/minecraft/srtm
              # tile the map over and over, or just truncate it at the dateline
              # and show water?
              wrap: Yes
      biome:
        # Use default minecraft biomes
        DefaultBiomeProvider: {}

        # Calculate biomes based on latitude and elevation
        WhittakerBiomeProvider: {}
      # Use standard named populator sets
      populatorSet: Bare
      populatorSet: BukkitPopulators
      # Load additional custom populators by name
      #populators:
      #- GlowstoneReefPopulator


    # Should we spawn water? (Useful when debugging bathymetry)
    spawnOcean: Yes

  # Fits the whole world onscreen
  # Dramatic, but extremely slow and memory intensive (eg 15GB of virtual memory).
  "bigworld":
    mapProjection:
      EquirectangularProjection:
        origin: [0,0]
        scale: [1, 1] # SLOOOOOW. Parses the whole world (1.87 GB for SMTP+)
    elevationProjection:
      LinearElevationProjection:
        scale: 1000
    spawn: [ 0, 0 ]
    sources:
      elevation:
        InterpolatedCoverageElevationProvider:
          provider:
            SRTMPlusElevationProvider:
              cache: /Users/blivens/dev/minecraft/srtm
      biome:
        WhittakerBiomeProvider: {}
landmarks:
  "San Diego": [32.717, -117.167 ]
  "Seattle": [47.617,-122.233]
  "Gabon": [0,9.348] # West african coast at equator
  "Kilimanjaro": [-3.068,37.350]
  Everest: [27.98806, 86.92528]
  Chimborazo: [-1.46917, -78.8175]
  "Challenger Deep": [11.3733, 142.5917]

# vi: ts=2 sw=2 et
